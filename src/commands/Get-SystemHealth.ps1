<#
Code generated by Microsoft (R) PSSwagger 0.3.0
Changes may cause incorrect behavior and will be lost if the code is regenerated.
#>

<#
.SYNOPSIS

.DESCRIPTION
    Get the current system health state

.PARAMETER server
    String VxManager ip address or FQDN.
.PARAMETER Username
    String User name in vCenter.
.PARAMETER Password
    String Password in vCenter.
#>

function Get-SystemHealth {
    [CmdletBinding(DefaultParameterSetName = 'getSystemHealth')]
    param(    
        [Parameter(Mandatory = $true)]
        # VxManager ip address or FQDN
        [string] $server,
        [Parameter(Mandatory = $true)]
        # User name in vCenter
        [String] $username,
        [Parameter(Mandatory = $true)]
        # Password in vCenter
        [String] $password
    )

    Begin {
        $libFunctions = @()
        # Put all the common functions into function drive.
        $libPath = (Join-Path -Path $PSScriptRoot -ChildPath '.' | Split-Path) + "\..\libs" 
        Get-ChildItem -Path $libPath -Include *.ps1 -Recurse | ForEach-Object {
            $currentFunctions = Get-ChildItem function:
            . $_
            # Save the functions for cleanup later
            $libFunctions += Get-ChildItem function: | Where-Object { $currentFunctions -notcontains $_ }
        }
        Set-SelfSignedCerts -ValidateCertificate $true
    }

    Process {
        $uri = "https://" + $server + "/rest/vxm/v1/system-health"

        $headers = Get-BasicAuthHeader -Username $Username -Password $Password

        try {
            Invoke-RestMethod -Method Get -Uri $uri -Headers $headers
        }
        catch {
            ExceptionHandler -Exception $_.Exception
        }
    }

    End { 
        $libFunctions |ForEach-Object {
            Remove-Item function:\$_
        }
    }
}